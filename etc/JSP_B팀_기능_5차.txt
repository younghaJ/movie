메인 화면 파트
-사이트 내의 데이터를 기반으로 순위를 매겨 상위권을 기록한 영화를 포스터와 함께 표시해준다
-표시되는 방식은 전체/장르별로 구분하며, 장르는 임의로 3~5종류를 지정하여 띄울 수 있게 할 예정이다
-영화 및 게시글이 메인 화면에 띄워지는 랭킹 기준은 특정 기간 내에 받은 좋아요 숫자를 기반으로 랭킹을 매기도록 한다
-영화의 포스터 및 이름을 클릭할 경우 해당 영화에 대한 상세정보 창으로 이동시킨다
-각 게시판별 베스트 게시글(일정 기간 내, 추천 수가 높은 게시글 기준)을 표시해주며, 이는 5~10개 정도를 보여주게 된다

(추가사항)통합검색 파트
-통합검색을 통해 거의 모든 요소에서 사용자가 입력한 키워드가 포함되는 게시글이나 영화가 있는지 검색하여 보여준다
-검색 결과에 대한 우선순위는 영화>리뷰>토론 순이다
-(고려중인 사항)만약 해당 검색을 여러 번 시행했을 때 과부하가 많이 걸릴 경우 통합검색을 n초당 m번으로 제한하는 것을 고려해야 할 것이다

로그인 파트
-사용자는 일반 회원과 관리자 둘 중 하나로 로그인할 수 있다
-일반 회원 내에서의 등급 차등은 고려하지 않았다
-가입되지 않은 회원의 경우 회원가입 버튼을 통해 회원가입 페이지로 유도한다

회원가입 파트
-회원가입 시 필요한 정보는 ID, 비밀번호, 닉네임, 출생연도, 성별이다
-ID는 등록할 때 반드시 중복 확인을 시행해야 한다
-비밀번호는 알파벳(대소문자 상관 없음)과 숫자가 같이 섞여서 사용되어야 하며, 최소 6자리 이상이어야 한다
-닉네임은 특수 문자를 사용할 수 없으며, 반드시 중복 확인을 시행해야 한다
-모든 내용을 작성하였다면 회원가입 버튼을 눌러 회원 정보를 db에 등록한다
-필요한 정보 중 하나라도 충족되지 않았거나, 중복 확인이 시행되지 않았을 경우 막아야 한다

마이페이지 파트
-마이페이지에서는 회원 정보 확인, 쪽지 확인, 작성한 글 확인, 좋아요를 누른 게시글이나 평가한 영화 확인, 북마크한 영화 확인 등을 시행할 수 있다
-작성한 글 확인 파트에서는 해당 글을 눌러 바로 게시글 페이지로 이동할 수 있으며, 이를 통해 작성한 게시글에 대한 수정 및 삭제를 신속하게 시행할 수 있도록 한다
-좋아요를 누른 게시글 역시 작성한 글 확인과 동일하게 동작하도록 하며, 좋아요를 철회할 수 있도록 한다
-평가를 누른 영화 확인의 경우, 해당 영화에 대한 상세정보 창으로 넘어가도록 한다, 이는 북마크한 영화 확인도 동일하게 동작한다
-회원 정보 확인 파트에서는 회원 정보 수정으로 넘어갈 수 있다
-쪽지 확인의 경우, 쪽지함을 확인하거나 쪽지 작성을 시행할 수 있다

회원 정보 수정 파트
-회원 정보 수정 화면으로 진입하기 전, 반드시 비밀번호 입력을 받아 개인 확인을 시행해야 한다
-ID는 고정되어(label로만 표시) 수정할 수 없고, 수정할 수 있는 것은 닉네임, 비밀번호이다
-(팀장 개인소견)출생연도와 성별은 수정 시 관련 좋아요 데이터를 전부 건드려야 하는 관계로 막아놓는 것이 좋을 것 같음, 억지로 돌릴 수는 있겠지만 관련 작업이 좀 귀찮아질 가능성이 높음
-닉네임은 수정 시 반드시 중복 확인을 시행하여야 한다
-비밀번호는 수정 시 수정 후의 비밀번호가 수정 전의 비밀번호와 달라야 하며, 동일할 경우 막아야 한다
-필요한 수정이 끝나고 나면 수정하기 버튼을 통해 회원정보를 수정할 수 있다
-수정 파트를 비워놓았을 경우, 수정을 진행하지 않는 것으로 간주한다

쪽지함 파트
-쪽지함은 받은 쪽지/보낸 쪽지로 구분할 수 있으며, 둘 다 같은 디자인을 공유한다
-쪽지를 확인하면 보낸 사람/받은 사람/제목/내용 순으로 표시가 되며, 보낸 사람 혹은 받은 사람을 클릭할 경우, 해당 회원에 대한 쪽지쓰기를 진행할 것인지 물어보는 창이 뜬다
-이 창에 대해 '예'를 누를 경우 해당 회원에 대한 정보와 함께 쪽지쓰기 파트로 넘어가게 된다
-자기 자신을 누를 경우 아무 일도 일어나지 않는다
-보낸 사람/받은 사람은 전송 당시 닉네임과 무관하게 현재 닉네임과 일부가 가려진 ID가 병기된다

쪽지쓰기 파트
-쪽지를 쓸 때 필요한 내용은 받을 사람의 닉네임/제목/내용이다
-받을 사람의 닉네임을 입력하여 회원 확인을 통해 해당 회원이 존재하는가에 대해 확인을 하여야 쪽지를 보낼 수 있다
-자기 자신에게 쪽지를 보내는 것은 허용되지 않는다(회원 확인을 진행할 때 막아야 함)
-ID로 확인은 시행하지 않는다
-모든 내용을 입력하고 회원 확인을 시행하고 나면 전송하기 버튼을 통해 쪽지를 보낼 수 있다
-제목이나 내용 중 하나라도 비어있거나 회원 확인을 시행하지 않았다면 이를 막아야 한다

영화목록 파트
-랭킹에 등재되지 않는 영화를 찾고자 할 때 접근하는 창
-기본적으로 전체 평점 중 인기가 많은 순으로 영화를 정렬하여 보여주며, 여기서 사용자가 제목이나 제작사, 감독 이름 등을 입력해서 검색하거나 특정 요소를 선택하는 식으로 검색을 진행할 수 있다
-그 외에 사용자가 북마크를 누른 영화만 골라서 보여줄 수도 있다
-(팀장 개인소견)요소 선택으로 검색하는 게 사용자 입장에서 편할 것 같음, 특정 키워드 입력으로 검색하는 기능은 여러 키워드를 다중으로 넣는 것보다는 특정 키워드만 검색할 수 있게 진행하는 게 혼선이 발생할 가능성을 줄일 수 있을 것임(실제 대규모 커뮤니티에서도 키워드를 다중으로 검색하는 기능은 지원하지 않고 있음)
-검색을 진행하여 사용자가 찾던 영화를 찾아서 클릭을 한다면 해당 영화에 대한 상세정보 창으로 넘어가게 된다

영화 상세정보 파트
-메인 화면에서 영화 포스터나 제목을 클릭하거나 통합 검색을 통해 특정 영화를 검색하여 접근할 수 있다
-영화에 대한 모든 정보를 해당 창에 표시하며, 해당 창에서 평가 및 북마크를 누를 수 있다
-한 번 누른 평가나 북마크를 다시 클릭하면 해당 평가/북마크가 철회되고 평가의 경우 만약 이미 평가를 내린 상태에서 정반대의 평가를 누를 경우 이전에 내린 평가가 철회된 뒤 해당 평가가 적용된다
-해당 정보를 표시한 뒤 평가 통계를 그래프, 혹은 표로 보여주며 해당 영화와 관련된 게시글을 상위 5개를 픽업하여 보여준다, 해당 기준은 최신순/총합 좋아요 순으로 하며 예외로 토론 게시글은 댓글이 많이 달린 순, 즉 의견 교환이 활발한 순으로 한다
-관련된 게시글을 볼 수 있는 파트에서는 해당 영화에 대한 리뷰/토론 더보기 버튼을 누르는 것으로 해당 영화에 대한 검색으로 바로 넘어갈 수 있게 한다
-(플랜 A)영화 제작진/줄거리/예고편/통계/관련글 보기 순으로 탭을 나누어서 해당 탭을 누르면 정보를 볼 수 있게 한다, 이를 통해 스크롤을 내릴 필요가 없게 만들거나 스크롤을 최소화시킨다
-(플랜 B)탭을 나누지 않고 한 화면에 전부 띄운다, 이 경우 모든 정보를 보려면 스크롤을 계속해서 내려야 할 것이다

(확정)좋아요 시스템 개편안
-좋아요 시스템 딱 하나가 아닌 해당 영화에 대한 추천/비추천으로 쪼개고자 함
-이를 통해 많은 사람들이 봤지만 실망스러운 영화가 적은 사람들이 봤지만 명작인 영화보다 더 위에 표시되는 현상을 방지하고자 함
-이 경우 좋아요 통계의 경우 특정 연령대의 추천비율/각 성별별 추천비율 등으로 변경할 수 있음
-총합 추천비율과 최근 추천비율 등으로 나눌 수 있는데, 최근 추천비율의 경우 전체 평가 숫자 중 최근 n%(5%~10% 정도가 적당할 것, 단 이 비율로 뽑아낸 평가 갯수가 최소 100개 이상이어야 함)만큼의 평가만 뽑아내서 통계를 내도록 할 수 있음

게시판 파트
-일반 회원은 다른 회원의 리뷰를 열람하거나 자신이 직접 리뷰를 작성할 수 있고, 또 자신이 작성한 리뷰에 대한 수정을 할 수 있다
-(추가사항)영화에 대한 리뷰, 단순히 영화에 대한 글, 공지
-관리자는 일반 회원과 달리 타인이 쓴 리뷰에 대해 수정 및 삭제를 시행할 수 있다
-(팀장 개인소견)관리자가 이런 거 집행하면 어떤 사유인지 명시하는 기능도 고려해야 할듯
-리뷰를 검색하고자 할 때는 리뷰 제목, 작성자로 검색할 수 있다
-영화를 직접 선택해서 굳이 제목을 입력할 필요 없이 해당 영화를 다룬 리뷰만 검색할 수 있다, 또한 이 기능으로 영화를 검색했을 때 상단에 (예고편이 유튜브에 올라와 있을 때)예고편 영상이 같이 보여지며 해당 영화에 대한 '좋아요'를 누를 수 있다

리뷰 열람 파트
-리뷰의 내용을 다 읽고 나면 해당 리뷰가 유익했는지에 대해 평가할 수 있다(추천/반대 기능과 유사)
-해당 리뷰가 자신의 리뷰일 경우 이를 수정하거나 삭제할 수 있는 버튼을 추가로 보여준다. 단 관리자는 이런 제약 없이 항상 수정/삭제 버튼이 보인다
-댓글 기능은 고려하지 않았다

리뷰 작성 파트
-리뷰 작성 시 반드시 들어가야 하는 내용은 제목과 내용이다
-어떤 영화에 대한 리뷰인지 사용자가 하나를 선택할 수 있다. 만약 영화가 아직 등록되어 있지 않을 경우 사용자는 이를 "등록되지 않음"으로 선택할 수 있다
-(팀장 개인소견)만약 두 영화를 비교하는 방식으로 사용자가 리뷰를 작성할 경우에는 어떻게 해야할까
-사용자가 내용을 전부 작성하였다면 등록 버튼을 눌러 리뷰를 등록한다
-제목과 내용 둘 중 하나라도 비어있을 경우 이를 막아야 한다
-정상적으로 등록되었다면 이후 검색에서 정상적으로 출력된다

리뷰 수정 파트
-디자인은 작성 화면과 동일하다

영화 등록 파트
-관리자가 새로 영화를 등록하고자 할 때 진입하는 창이다
-여기서 관리자가 새 영화를 등록한다면 곧바로 사용자들이 해당 영화를 리뷰를 작성할 때 선택할 수 있다
-영화 등록 시 반드시 필요한 요소는 제목과 장르이다
-장르는 체크박스 형태로 체크할 수 있어 여러 장르를 선택할 수 있다
-그 외에 추가로 작성할 수 있는 요소는 감독, 주역, 줄거리 등이 있다
-포스터 이미지도 추가로 등록할 수 있으며, 이는 업로드 형식으로 이루어진다
-예고편이 유튜브에 존재할 경우 이를 링크 형태로 긁어와서 등록할 수 있다
-모든 내용 작성이 끝났다면 등록 버튼을 눌러 영화를 등록한다
-제목이 비어있거나 장르가 하나도 체크되어 있지 않을 경우 이를 막아야 한다

토론 게시판 파트
-특정 영화에 대한 토론을 진행하고자 할 때 진입하는 창이다
-메인 화면에서 토론 게시판으로 넘어올 경우 모든 종류의 토론이 등록된 날짜 순으로 정렬되어 표시되며, 여기서 제목에 검색하고자 하는 제목을 입력하여 해당 제목이 포함된 토론으로 진행할 수 있다
-영화 검색 파트에서 해당 영화에 대한 토론 검색하기 버튼을 통해 진입할 경우, 해당 영화와 관련된 토론만 보여진다
-토론 규칙 등은 관리자가 직접 정하도록 한다

토론 게시글 등록 파트
-토론 게시글을 새로 등록하고자 할 때 진입하는 창이다
-토론 게시글 작성 시 반드시 작성되어야 하는 항목은 제목과 내용이다
-리뷰 작성 시와 마찬가지로 영화를 등록할 수 있으며 없으면 "등록되지 않음"으로 분류할 수 있다
-모든 항목을 작성했다면 등록 버튼을 눌러 토론 게시글을 올릴 수 있다
-제목이나 내용 중 하나라도 비어있을 경우 이를 막아야 한다
-(고려중인 사항)투표 기능이 있는 글과 없는 글을 동시에 다룰 수 있다면 투표 기능을 추가하고자 함

토론 게시글 파트
-토론 게시글을 눌러 진입하는 창이다
-해당 토론의 제목, 등록자, 등록일자, 내용 순으로 표시되며 토론 게시글은 한 번 등록한 뒤 새 의견(댓글)이 달리는 시점부터 수정할 수 없도록 한다
-게시글 아래에는 작성된 댓글을 차례로 표시하도록 하며(디폴트 값은 최신 댓글일수록 맨 위에), 댓글에 대한 답글 기능은 아래쪽 댓글에 >>N(답글을 달고자 한 댓글 번호) 식으로 표시하도록 규정한다, 즉 댓글에 대해 다이렉트로 답글을 다는 기능을 지원하지는 않도록 한다
-(팀장 개인소견)이쪽이 토론 중재에 훨씬 간편할 것
-댓글을 작성하고자 할 때에는 게시글과 댓글 칸 사이에 내용을 입력한 뒤 등록 버튼을 눌러 등록하도록 한다, 만약 특정 댓글을 클릭할 경우 해당 댓글에 대한 답글 형태가 입력될 수 있도록 댓글 작성창에 >>N을 자동으로 입력해준다
-내용이 하나도 없을 경우 등록을 막아야 한다

(고려중인 사항)뉴스 파트(플랜 A)
-영화 관련 뉴스를 직접 크롤링하여 가져오는 창이다
-크롤링한 결과값 중 최신에 해당하는 뉴스를 게시판에 띄우게 된다
-(팀장 개인소견)크롤링이 가능하다면 이 사이트 내에서 뉴스까지 전부 띄울 수 있으니 사이트를 벗어날 필요가 없을 것

(고려중인 사항)뉴스 파트(플랜 B)
-영화 관련 뉴스를 네이버 뉴스 api를 이용해 긁어오는 창이다
-영화 관련 뉴스를 검색하여 결과값 중 최신 내용에 해당하는 뉴스를 게시판에 띄우게 된다
-(팀장 개인소견)검색 결과만 가져올 수 있는 api인 관계로 이를 사용한다면 검색 중계만 가능할 것 같음